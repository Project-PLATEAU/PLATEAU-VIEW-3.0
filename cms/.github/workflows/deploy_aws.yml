name: deploy-aws
on:
  workflow_dispatch:

env:
  # server
  IMAGE: reearth/reearth-cms:nightly
  IMAGE_AWS: reearth-cms-test-server:latest
  # worker
  WORKER_IMAGE: reearth/reearth-cms-worker:nightly
  WORKER_IMAGE_AWS: reearth-cms-test-worker:latest

jobs:
  deploy_web:
    name: Deploy web to AWS
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - uses: actions/checkout@v4
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install
        run: yarn install
      - name: Lint
        run: yarn run lint
      - name: Test
        run: yarn run coverage
      - name: Send coverage report
        uses: codecov/codecov-action@v4
        with:
          flags: web
      - name: Check translations
        run: yarn i18n --fail-on-update
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Install Amplify CLI
        run: yarn global add @aws-amplify/cli
      - name: Pull Amplify project
        run: amplify pull --appId ${{ secrets.AWS_AMPLIFY_APP_ID }} --envName test --yes
      - name: Build and Deploy to Amplify
        run: amplify publish --appId ${{ secrets.AWS_AMPLIFY_APP_ID }} --envName test --yes

  deploy_server:
    name: Deploy server to AWS
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log in to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push docker image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.IMAGE_AWS }}
          # cache-from: type=gha
          # cache-to: type=gha,mode=max

  deploy_worker:
    name: Deploy worker to AWS
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log in to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push docker image
        uses: docker/build-push-action@v5
        with:
          context: ./worker
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.WORKER_IMAGE_AWS }}
          # cache-from: type=gha
          # cache-to: type=gha,mode=max
